{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./dist/projects/ngx-mousetrap/src/lib/ngx-mousetrap.service.ts","./dist/projects/ngx-mousetrap/src/lib/ngx-mousetrap.directive.ts","./dist/projects/ngx-mousetrap/src/lib/ngx-mousetrap.module.ts","./dist/projects/ngx-mousetrap/src/public-api.ts","./dist/projects/ngx-mousetrap/src/ngx-mousetrap.ts","./projects/ngx-mousetrap/src/lib/ngx-mousetrap.directive.ts","./projects/ngx-mousetrap/src/lib/ngx-mousetrap.module.ts","./projects/ngx-mousetrap/src/lib/ngx-mousetrap.service.ts","./projects/ngx-mousetrap/src/public-api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable } from '@angular/core';\nimport { NgxKeyHandler, NgxKeyEvent } from './utils';\nimport { Observable, EMPTY, Subject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport * as Mousetrap from 'mousetrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMousetrapService {\n  // current mousetrap instance\n  private mousetrap: Mousetrap.MousetrapInstance;\n\n  private scopedMouseTrap: WeakMap<HTMLElement, {\n    mousetrap: Mousetrap.MousetrapInstance,\n    keyMap: Map<string, NgxKeyHandler>\n  }> = new WeakMap();\n\n  // map of keycombination and hotkey details.\n  private keyMap: Map<string, NgxKeyHandler> = new Map();\n\n  public paused = false;\n\n  constructor() {\n    this.mousetrap = new Mousetrap();\n    const origninalCB = this.mousetrap.stopCallback;\n\n    this.mousetrap.stopCallback = (e, element, combo) => {\n      if (this.paused) {\n        return true;\n      }\n      return origninalCB.apply(this.mousetrap, [e, element, combo]);\n    };\n  }\n\n  /**\n   * Registers the hot key combinations and returns an observable which will be\n   * triggred when hotkey combination is pressed\n   * @param keys list of hotkey combinations\n   */\n  public register(key: string, scope?: HTMLElement): Observable<NgxKeyEvent> {\n    if (!key) {\n      return EMPTY;\n    }\n\n    let keyMap = this.keyMap;\n    let mousetrapInstance = this.mousetrap;\n\n    if (scope) {\n      if (!this.scopedMouseTrap.has(scope)) {\n        keyMap = new Map();\n        mousetrapInstance = new Mousetrap(scope);\n        this.scopedMouseTrap.set(scope, { keyMap, mousetrap: mousetrapInstance });\n      } else {\n        mousetrapInstance = this.scopedMouseTrap.get(scope).mousetrap;\n        keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      }\n    }\n\n    if (keyMap.has(key)) {\n      return keyMap.get(key).handler$.asObservable().pipe(throttleTime(300));\n    }\n\n    const handler$: Subject<NgxKeyEvent> = new Subject();\n\n    const keyCombos = key.split('|').map(part => part.trim());\n    // bind the key to mousetrap\n    mousetrapInstance.bind(keyCombos, (e, combo: string) => {\n      handler$.next({\n        key: combo,\n        event: e\n      });\n    });\n\n    const value = { handler$ };\n    keyMap.set(key, value);\n\n    // throttle the key press.\n    return handler$.asObservable().pipe(throttleTime(300));\n\n  }\n\n\n  /**\n   * unregister the keys.\n   * @param keys list of key combnations\n   */\n  public unregister(scope: HTMLElement = null, ...keys: string[]): void {\n    let mousetrap = this.mousetrap;\n    let keyMap = this.keyMap;\n    let keysList = keys;\n\n    if (scope && this.scopedMouseTrap.has(scope)) {\n      mousetrap = this.scopedMouseTrap.get(scope).mousetrap;\n      keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      if (!keys || keys.length === 0) {\n        keysList = Array.from(this.scopedMouseTrap.get(scope).keyMap.keys());\n      }\n    }\n    if (!keysList || keysList.length === 0) {\n      return;\n    }\n    keysList.forEach(k => this._unregister(k, mousetrap, keyMap));\n  }\n\n  /**\n   * unregister the given key combination.\n   * if the key is the last key for the observable, the complete the observable.\n   * @param key key combination\n   * @param mousetrap mousetrap instance\n   * @param keyMap key map\n   */\n  private _unregister(key: string, mousetrap: Mousetrap.MousetrapInstance, keyMap: Map<string, NgxKeyHandler>) {\n    mousetrap.unbind(key);\n    if (keyMap.has(key)) {\n      const value = keyMap.get(key);\n      value.handler$.complete();\n      keyMap.delete(key);\n    }\n  }\n\n}\n","import { Directive, Input, Output, EventEmitter, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { NgxKeyEvent } from './utils';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n@Directive({\n  selector: '[ngxMousetrapKey]'\n})\nexport class NgxMousetrapDirective implements OnInit, OnDestroy {\n  // list of hot key combination for this element.\n  @Input() ngxMousetrapKey: string;\n\n  // by default simulate click event on the element if hotkey is pressed.\n  // use this flag to turn off the behavior\n  @Input() suppressAutoClick: boolean;\n\n  // emits an event when hotkey is pressed.\n  @Output() mousetrapKeyPressed: EventEmitter<NgxKeyEvent> = new EventEmitter();\n\n  constructor(\n    private elementRef: ElementRef,\n    private ngxMousetrapService: NgxMousetrapService) {\n  }\n\n  ngOnInit() {\n    if (!this.ngxMousetrapKey) {\n      console.error(`No hotkey available for ${this.elementRef.nativeElement}`);\n      return;\n    }\n\n    this.ngxMousetrapService.register(this.ngxMousetrapKey).subscribe(hkEvent => {\n      if (!this.suppressAutoClick) {\n        (this.elementRef.nativeElement as HTMLElement).dispatchEvent(new Event('click'));\n      }\n      this.mousetrapKeyPressed.emit(hkEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.ngxMousetrapKey) {\n      this.ngxMousetrapService.unregister(null, this.ngxMousetrapKey);\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxMousetrapDirective } from './ngx-mousetrap.directive';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n\n\n@NgModule({\n  declarations: [NgxMousetrapDirective],\n  imports: [],\n  exports: [NgxMousetrapDirective],\n  providers: [NgxMousetrapService]\n})\nexport class NgxMousetrapModule {\n  static forRoot(): ModuleWithProviders<NgxMousetrapModule> {\n    return {\n      ngModule: NgxMousetrapModule,\n      providers: [\n        NgxMousetrapService\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-mousetrap\n */\n\nexport * from './lib/ngx-mousetrap.service';\nexport * from './lib/ngx-mousetrap.directive';\nexport * from './lib/ngx-mousetrap.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Directive, Input, Output, EventEmitter, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { NgxKeyEvent } from './utils';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n@Directive({\n  selector: '[ngxMousetrapKey]'\n})\nexport class NgxMousetrapDirective implements OnInit, OnDestroy {\n  // list of hot key combination for this element.\n  @Input() ngxMousetrapKey: string;\n\n  // by default simulate click event on the element if hotkey is pressed.\n  // use this flag to turn off the behavior\n  @Input() suppressAutoClick: boolean;\n\n  // emits an event when hotkey is pressed.\n  @Output() mousetrapKeyPressed: EventEmitter<NgxKeyEvent> = new EventEmitter();\n\n  constructor(\n    private elementRef: ElementRef,\n    private ngxMousetrapService: NgxMousetrapService) {\n  }\n\n  ngOnInit() {\n    if (!this.ngxMousetrapKey) {\n      console.error(`No hotkey available for ${this.elementRef.nativeElement}`);\n      return;\n    }\n\n    this.ngxMousetrapService.register(this.ngxMousetrapKey).subscribe(hkEvent => {\n      if (!this.suppressAutoClick) {\n        (this.elementRef.nativeElement as HTMLElement).dispatchEvent(new Event('click'));\n      }\n      this.mousetrapKeyPressed.emit(hkEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.ngxMousetrapKey) {\n      this.ngxMousetrapService.unregister(null, this.ngxMousetrapKey);\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxMousetrapDirective } from './ngx-mousetrap.directive';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n\n\n@NgModule({\n  declarations: [NgxMousetrapDirective],\n  imports: [],\n  exports: [NgxMousetrapDirective],\n  providers: [NgxMousetrapService]\n})\nexport class NgxMousetrapModule {\n  static forRoot(): ModuleWithProviders<NgxMousetrapModule> {\n    return {\n      ngModule: NgxMousetrapModule,\n      providers: [\n        NgxMousetrapService\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxKeyHandler, NgxKeyEvent } from './utils';\nimport { Observable, EMPTY, Subject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport * as Mousetrap from 'mousetrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMousetrapService {\n  // current mousetrap instance\n  private mousetrap: Mousetrap.MousetrapInstance;\n\n  private scopedMouseTrap: WeakMap<HTMLElement, {\n    mousetrap: Mousetrap.MousetrapInstance,\n    keyMap: Map<string, NgxKeyHandler>\n  }> = new WeakMap();\n\n  // map of keycombination and hotkey details.\n  private keyMap: Map<string, NgxKeyHandler> = new Map();\n\n  public paused = false;\n\n  constructor() {\n    this.mousetrap = new Mousetrap();\n    const origninalCB = this.mousetrap.stopCallback;\n\n    this.mousetrap.stopCallback = (e, element, combo) => {\n      if (this.paused) {\n        return true;\n      }\n      return origninalCB.apply(this.mousetrap, [e, element, combo]);\n    };\n  }\n\n  /**\n   * Registers the hot key combinations and returns an observable which will be\n   * triggred when hotkey combination is pressed\n   * @param keys list of hotkey combinations\n   */\n  public register(key: string, scope?: HTMLElement): Observable<NgxKeyEvent> {\n    if (!key) {\n      return EMPTY;\n    }\n\n    let keyMap = this.keyMap;\n    let mousetrapInstance = this.mousetrap;\n\n    if (scope) {\n      if (!this.scopedMouseTrap.has(scope)) {\n        keyMap = new Map();\n        mousetrapInstance = new Mousetrap(scope);\n        this.scopedMouseTrap.set(scope, { keyMap, mousetrap: mousetrapInstance });\n      } else {\n        mousetrapInstance = this.scopedMouseTrap.get(scope).mousetrap;\n        keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      }\n    }\n\n    if (keyMap.has(key)) {\n      return keyMap.get(key).handler$.asObservable().pipe(throttleTime(300));\n    }\n\n    const handler$: Subject<NgxKeyEvent> = new Subject();\n\n    const keyCombos = key.split('|').map(part => part.trim());\n    // bind the key to mousetrap\n    mousetrapInstance.bind(keyCombos, (e, combo: string) => {\n      handler$.next({\n        key: combo,\n        event: e\n      });\n    });\n\n    const value = { handler$ };\n    keyMap.set(key, value);\n\n    // throttle the key press.\n    return handler$.asObservable().pipe(throttleTime(300));\n\n  }\n\n\n  /**\n   * unregister the keys.\n   * @param keys list of key combnations\n   */\n  public unregister(scope: HTMLElement = null, ...keys: string[]): void {\n    let mousetrap = this.mousetrap;\n    let keyMap = this.keyMap;\n    let keysList = keys;\n\n    if (scope && this.scopedMouseTrap.has(scope)) {\n      mousetrap = this.scopedMouseTrap.get(scope).mousetrap;\n      keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      if (!keys || keys.length === 0) {\n        keysList = Array.from(this.scopedMouseTrap.get(scope).keyMap.keys());\n      }\n    }\n    if (!keysList || keysList.length === 0) {\n      return;\n    }\n    keysList.forEach(k => this._unregister(k, mousetrap, keyMap));\n  }\n\n  /**\n   * unregister the given key combination.\n   * if the key is the last key for the observable, the complete the observable.\n   * @param key key combination\n   * @param mousetrap mousetrap instance\n   * @param keyMap key map\n   */\n  private _unregister(key: string, mousetrap: Mousetrap.MousetrapInstance, keyMap: Map<string, NgxKeyHandler>) {\n    mousetrap.unbind(key);\n    if (keyMap.has(key)) {\n      const value = keyMap.get(key);\n      value.handler$.complete();\n      keyMap.delete(key);\n    }\n  }\n\n}\n","/*\n * Public API Surface of ngx-mousetrap\n */\n\nexport * from './lib/ngx-mousetrap.service';\nexport * from './lib/ngx-mousetrap.directive';\nexport * from './lib/ngx-mousetrap.module';\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgxMousetrapService } from 'projects/ngx-mousetrap/src/public-api';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'ngx-mousetrap-angular';\n  clickedAt = null;\n\n  keypressed: string[] = [];\n\n  keysBound = '? | esc | up up down down | command+shift+k | ctrl+s | command+s | alt+r | h e l l o';\n\n  private subscription: Subscription;\n\n  @ViewChild('demoArea', { read: ElementRef, static: true })\n  demoArea: ElementRef;\n\n  constructor(private service: NgxMousetrapService) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.service.register(this.keysBound, this.demoArea.nativeElement).subscribe(evt => {\n      this.keypressed.push(`Detected ${evt.key}`);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n\n  onClick() {\n    this.clickedAt = new Date();\n  }\n}\n","<div class=\"main-container\">\n  <header class=\"header header-6\">\n    <div class=\"branding\">\n      <a href=\"javascript:void(0)\" class=\"nav-link\">\n        <clr-icon shape=\"vm-bug\"></clr-icon>\n        <span class=\"title\">Project NGX Mousetrap</span>\n      </a>\n    </div>\n  </header>\n  <div class=\"content-container\">\n    <div class=\"content-area\">\n      <button class=\"btn btn-primary\" (click)=\"onClick()\" [ngxMousetrapKey]=\"'command+enter | ctrl+enter'\">Click or\n        press (command/ctrl)+enter</button>\n      <div *ngIf=\"clickedAt\">\n        Clicked at {{clickedAt}}\n      </div>\n\n      <div class=\"service-demo\" tabindex=\"0\" #demoArea>\n        NgxMousetrap Service Demo Area. <br/>\n        <clr-alert>\n          <clr-alert-item>\n              <span class=\"alert-text\">\n                Keys are bound only to this area, focus this area before pressing hotkeys.\n              </span>\n          </clr-alert-item>\n      </clr-alert>\n        Following keys are bound\n        <br />\n        {{keysBound}}\n        <div *ngFor=\"let key of keypressed\">\n          {{key}}\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxMousetrapModule } from 'ngx-mousetrap';\n\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxMousetrapModule.forRoot(),\n    ClarityModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}