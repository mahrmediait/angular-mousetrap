{"version":3,"file":"ngx-mousetrap.umd.js","sources":["../../../projects/ngx-mousetrap/src/lib/ngx-mousetrap.service.ts","../../../projects/ngx-mousetrap/src/lib/ngx-mousetrap.directive.ts","../../../projects/ngx-mousetrap/src/lib/ngx-mousetrap.module.ts","../../../projects/ngx-mousetrap/src/public-api.ts","../../../projects/ngx-mousetrap/src/ngx-mousetrap.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxKeyHandler, NgxKeyEvent } from './utils';\nimport { Observable, EMPTY, Subject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport * as Mousetrap from 'mousetrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMousetrapService {\n  // current mousetrap instance\n  private mousetrap: Mousetrap.MousetrapInstance;\n\n  private scopedMouseTrap: WeakMap<HTMLElement, {\n    mousetrap: Mousetrap.MousetrapInstance,\n    keyMap: Map<string, NgxKeyHandler>\n  }> = new WeakMap();\n\n  // map of keycombination and hotkey details.\n  private keyMap: Map<string, NgxKeyHandler> = new Map();\n\n  public paused = false;\n\n  constructor() {\n    this.mousetrap = new Mousetrap();\n    const origninalCB = this.mousetrap.stopCallback;\n\n    this.mousetrap.stopCallback = (e, element, combo) => {\n      if (this.paused) {\n        return true;\n      }\n      return origninalCB.apply(this.mousetrap, [e, element, combo]);\n    };\n  }\n\n  /**\n   * Registers the hot key combinations and returns an observable which will be\n   * triggred when hotkey combination is pressed\n   * @param keys list of hotkey combinations\n   */\n  public register(key: string, scope?: HTMLElement): Observable<NgxKeyEvent> {\n    if (!key) {\n      return EMPTY;\n    }\n\n    let keyMap = this.keyMap;\n    let mousetrapInstance = this.mousetrap;\n\n    if (scope) {\n      if (!this.scopedMouseTrap.has(scope)) {\n        keyMap = new Map();\n        mousetrapInstance = new Mousetrap(scope);\n        this.scopedMouseTrap.set(scope, { keyMap, mousetrap: mousetrapInstance });\n      } else {\n        mousetrapInstance = this.scopedMouseTrap.get(scope).mousetrap;\n        keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      }\n    }\n\n    if (keyMap.has(key)) {\n      return keyMap.get(key).handler$.asObservable().pipe(throttleTime(300));\n    }\n\n    const handler$: Subject<NgxKeyEvent> = new Subject();\n\n    const keyCombos = key.split('|').map(part => part.trim());\n    // bind the key to mousetrap\n    mousetrapInstance.bind(keyCombos, (e, combo: string) => {\n      handler$.next({\n        key: combo,\n        event: e\n      });\n    });\n\n    const value = { handler$ };\n    keyMap.set(key, value);\n\n    // throttle the key press.\n    return handler$.asObservable().pipe(throttleTime(300));\n\n  }\n\n\n  /**\n   * unregister the keys.\n   * @param keys list of key combnations\n   */\n  public unregister(scope: HTMLElement = null, ...keys: string[]): void {\n    let mousetrap = this.mousetrap;\n    let keyMap = this.keyMap;\n    let keysList = keys;\n\n    if (scope && this.scopedMouseTrap.has(scope)) {\n      mousetrap = this.scopedMouseTrap.get(scope).mousetrap;\n      keyMap = this.scopedMouseTrap.get(scope).keyMap;\n      if (!keys || keys.length === 0) {\n        keysList = Array.from(this.scopedMouseTrap.get(scope).keyMap.keys());\n      }\n    }\n    if (!keysList || keysList.length === 0) {\n      return;\n    }\n    keysList.forEach(k => this._unregister(k, mousetrap, keyMap));\n  }\n\n  /**\n   * unregister the given key combination.\n   * if the key is the last key for the observable, the complete the observable.\n   * @param key key combination\n   * @param mousetrap mousetrap instance\n   * @param keyMap key map\n   */\n  private _unregister(key: string, mousetrap: Mousetrap.MousetrapInstance, keyMap: Map<string, NgxKeyHandler>) {\n    mousetrap.unbind(key);\n    if (keyMap.has(key)) {\n      const value = keyMap.get(key);\n      value.handler$.complete();\n      keyMap.delete(key);\n    }\n  }\n\n}\n","import { Directive, Input, Output, EventEmitter, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { NgxKeyEvent } from './utils';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n@Directive({\n  selector: '[ngxMousetrapKey]'\n})\nexport class NgxMousetrapDirective implements OnInit, OnDestroy {\n  // list of hot key combination for this element.\n  @Input() ngxMousetrapKey: string;\n\n  // by default simulate click event on the element if hotkey is pressed.\n  // use this flag to turn off the behavior\n  @Input() suppressAutoClick: boolean;\n\n  // emits an event when hotkey is pressed.\n  @Output() mousetrapKeyPressed: EventEmitter<NgxKeyEvent> = new EventEmitter();\n\n  constructor(\n    private elementRef: ElementRef,\n    private ngxMousetrapService: NgxMousetrapService) {\n  }\n\n  ngOnInit() {\n    if (!this.ngxMousetrapKey) {\n      console.error(`No hotkey available for ${this.elementRef.nativeElement}`);\n      return;\n    }\n\n    this.ngxMousetrapService.register(this.ngxMousetrapKey).subscribe(hkEvent => {\n      if (!this.suppressAutoClick) {\n        (this.elementRef.nativeElement as HTMLElement).dispatchEvent(new Event('click'));\n      }\n      this.mousetrapKeyPressed.emit(hkEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.ngxMousetrapKey) {\n      this.ngxMousetrapService.unregister(null, this.ngxMousetrapKey);\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxMousetrapDirective } from './ngx-mousetrap.directive';\nimport { NgxMousetrapService } from './ngx-mousetrap.service';\n\n\n\n@NgModule({\n  declarations: [NgxMousetrapDirective],\n  imports: [],\n  exports: [NgxMousetrapDirective],\n  providers: [NgxMousetrapService]\n})\nexport class NgxMousetrapModule {\n  static forRoot(): ModuleWithProviders<NgxMousetrapModule> {\n    return {\n      ngModule: NgxMousetrapModule,\n      providers: [\n        NgxMousetrapService\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-mousetrap\n */\n\nexport * from './lib/ngx-mousetrap.service';\nexport * from './lib/ngx-mousetrap.directive';\nexport * from './lib/ngx-mousetrap.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Mousetrap","EMPTY","throttleTime","Subject","Injectable","EventEmitter","Directive","ElementRef","Input","Output","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAuBE;YAAA,iBAUC;YApBO,oBAAe,GAGlB,IAAI,OAAO,EAAE,CAAC;;YAGX,WAAM,GAA+B,IAAI,GAAG,EAAE,CAAC;YAEhD,WAAM,GAAG,KAAK,CAAC;YAGpB,IAAI,CAAC,SAAS,GAAG,IAAIA,oBAAS,EAAE,CAAC;YACjC,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;YAEhD,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,UAAC,CAAC,EAAE,OAAO,EAAE,KAAK;gBAC9C,IAAI,KAAI,CAAC,MAAM,EAAE;oBACf,OAAO,IAAI,CAAC;iBACb;gBACD,OAAO,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;aAC/D,CAAC;SACH;;;;;;QAOM,sCAAQ,GAAR,UAAS,GAAW,EAAE,KAAmB;YAC9C,IAAI,CAAC,GAAG,EAAE;gBACR,OAAOC,UAAK,CAAC;aACd;YAED,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;YAEvC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACpC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;oBACnB,iBAAiB,GAAG,IAAID,oBAAS,CAAC,KAAK,CAAC,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,QAAA,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC,CAAC;iBAC3E;qBAAM;oBACL,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;oBAC9D,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;iBACjD;aACF;YAED,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACnB,OAAO,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAACE,sBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;aACxE;YAED,IAAM,QAAQ,GAAyB,IAAIC,YAAO,EAAE,CAAC;YAErD,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,GAAA,CAAC,CAAC;;YAE1D,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,CAAC,EAAE,KAAa;gBACjD,QAAQ,CAAC,IAAI,CAAC;oBACZ,GAAG,EAAE,KAAK;oBACV,KAAK,EAAE,CAAC;iBACT,CAAC,CAAC;aACJ,CAAC,CAAC;YAEH,IAAM,KAAK,GAAG,EAAE,QAAQ,UAAA,EAAE,CAAC;YAC3B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;;YAGvB,OAAO,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAACD,sBAAY,CAAC,GAAG,CAAC,CAAC,CAAC;SAExD;;;;;QAOM,wCAAU,GAAV,UAAW,KAAyB;YAApC,iBAgBN;YAhBiB,sBAAA,EAAA,YAAyB;YAAE,cAAiB;iBAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;gBAAjB,6BAAiB;;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,IAAI,QAAQ,GAAG,IAAI,CAAC;YAEpB,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC5C,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACtD,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;gBAChD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;iBACtE;aACF;YACD,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtC,OAAO;aACR;YACD,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,GAAA,CAAC,CAAC;SAC/D;;;;;;;;QASO,yCAAW,GAAX,UAAY,GAAW,EAAE,SAAsC,EAAE,MAAkC;YACzG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACnB,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBAC1B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACpB;SACF;;;;;gBAjHFE,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;QCUC,+BACU,UAAsB,EACtB,mBAAwC;YADxC,eAAU,GAAV,UAAU,CAAY;YACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;;YAJxC,wBAAmB,GAA8B,IAAIC,eAAY,EAAE,CAAC;SAK7E;QAED,wCAAQ,GAAR;YAAA,iBAYC;YAXC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,OAAO,CAAC,KAAK,CAAC,6BAA2B,IAAI,CAAC,UAAU,CAAC,aAAe,CAAC,CAAC;gBAC1E,OAAO;aACR;YAED,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAA,OAAO;gBACvE,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE;oBAC1B,KAAI,CAAC,UAAU,CAAC,aAA6B,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClF;gBACD,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC,CAAC,CAAC;SACJ;QAED,2CAAW,GAAX;YACE,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;aACjE;SACF;;;;gBArCFC,YAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;iBAC9B;;;gBANgDC,aAAU;gBAElD,mBAAmB;;;kCAOzBC,QAAK;oCAILA,QAAK;sCAGLC,SAAM;;;;QCJT;;QACS,0BAAO,GAAd;YACE,OAAO;gBACL,QAAQ,EAAE,kBAAkB;gBAC5B,SAAS,EAAE;oBACT,mBAAmB;iBACpB;aACF,CAAC;SACH;;;;gBAdFC,WAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,qBAAqB,CAAC;oBAChC,SAAS,EAAE,CAAC,mBAAmB,CAAC;iBACjC;;;ICXD;;;;ICAA;;;;;;;;;;;;;;"}