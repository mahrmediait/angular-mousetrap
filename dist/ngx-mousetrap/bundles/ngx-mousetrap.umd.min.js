!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("rxjs/operators"),require("mousetrap")):"function"==typeof define&&define.amd?define("ngx-mousetrap",["exports","@angular/core","rxjs","rxjs/operators","mousetrap"],t):t((e=e||self)["ngx-mousetrap"]={},e.ng.core,e.rxjs,e.rxjs.operators,e.Mousetrap)}(this,(function(e,t,r,s,o){"use strict";var n=function(){function e(){var e=this;this.scopedMouseTrap=new WeakMap,this.keyMap=new Map,this.paused=!1,this.mousetrap=new o;var t=this.mousetrap.stopCallback;this.mousetrap.stopCallback=function(r,s,o){return!!e.paused||t.apply(e.mousetrap,[r,s,o])}}return e.prototype.register=function(e,t){if(!e)return r.EMPTY;var n=this.keyMap,i=this.mousetrap;if(t&&(this.scopedMouseTrap.has(t)?(i=this.scopedMouseTrap.get(t).mousetrap,n=this.scopedMouseTrap.get(t).keyMap):(n=new Map,i=new o(t),this.scopedMouseTrap.set(t,{keyMap:n,mousetrap:i}))),n.has(e))return n.get(e).handler$.asObservable().pipe(s.throttleTime(300));var u=new r.Subject,p=e.split("|").map((function(e){return e.trim()}));i.bind(p,(function(e,t){u.next({key:t,event:e})}));var a={handler$:u};return n.set(e,a),u.asObservable().pipe(s.throttleTime(300))},e.prototype.unregister=function(e){var t=this;void 0===e&&(e=null);for(var r=[],s=1;s<arguments.length;s++)r[s-1]=arguments[s];var o=this.mousetrap,n=this.keyMap,i=r;e&&this.scopedMouseTrap.has(e)&&(o=this.scopedMouseTrap.get(e).mousetrap,n=this.scopedMouseTrap.get(e).keyMap,r&&0!==r.length||(i=Array.from(this.scopedMouseTrap.get(e).keyMap.keys()))),i&&0!==i.length&&i.forEach((function(e){return t._unregister(e,o,n)}))},e.prototype._unregister=function(e,t,r){(t.unbind(e),r.has(e))&&(r.get(e).handler$.complete(),r.delete(e))},e.ɵfac=function(t){return new(t||e)},e.ɵprov=t.ɵɵdefineInjectable({token:e,factory:e.ɵfac,providedIn:"root"}),e}(),i=function(){function e(e,r){this.elementRef=e,this.ngxMousetrapService=r,this.mousetrapKeyPressed=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.ngxMousetrapKey?this.ngxMousetrapService.register(this.ngxMousetrapKey).subscribe((function(t){e.suppressAutoClick||e.elementRef.nativeElement.dispatchEvent(new Event("click")),e.mousetrapKeyPressed.emit(t)})):console.error("No hotkey available for "+this.elementRef.nativeElement)},e.prototype.ngOnDestroy=function(){this.ngxMousetrapKey&&this.ngxMousetrapService.unregister(null,this.ngxMousetrapKey)},e.ɵfac=function(r){return new(r||e)(t.ɵɵdirectiveInject(t.ElementRef),t.ɵɵdirectiveInject(n))},e.ɵdir=t.ɵɵdefineDirective({type:e,selectors:[["","ngxMousetrapKey",""]],inputs:{ngxMousetrapKey:"ngxMousetrapKey",suppressAutoClick:"suppressAutoClick"},outputs:{mousetrapKeyPressed:"mousetrapKeyPressed"}}),e}(),u=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[n]}},e.ɵmod=t.ɵɵdefineNgModule({type:e}),e.ɵinj=t.ɵɵdefineInjector({factory:function(t){return new(t||e)},providers:[n],imports:[[]]}),e}();("undefined"==typeof ngJitMode||ngJitMode)&&t.ɵɵsetNgModuleScope(u,{declarations:[i],exports:[i]}),e.NgxMousetrapDirective=i,e.NgxMousetrapModule=u,e.NgxMousetrapService=n,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-mousetrap.umd.min.js.map